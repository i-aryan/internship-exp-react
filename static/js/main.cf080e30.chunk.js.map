{"version":3,"sources":["components/upperfeed.component.js","components/feed.component.js","App.js","serviceWorker.js","index.js"],"names":["removeTags","str","toString","replace","UpperFeed","props","state","post1","title","author","pubDate","content","link","thumbnail","post2","post3","axios","get","then","response","setState","data","items","catch","err","console","log","className","onClick","e","window","location","style","backgroundImage","this","class","href","substring","React","Component","FeedCard","post","Feed","posts","slice","map","currentPost","i","postCards","App","to","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cf080e30.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction removeTags(str) {\r\n  if ((str===null) || (str===''))\r\n  return 'empty';\r\n  else\r\n  str = str.toString();\r\n  return str.replace( /(<([^>]+)>)/ig, '');\r\n}\r\n\r\nclass UpperFeed extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      post1: {\r\n        title: \"\",\r\n        author: \"\",\r\n        pubDate: \"\",\r\n        content: \"\",\r\n        link:\"\",\r\n        thumbnail:\"\",\r\n        \r\n      },\r\n      post2: {\r\n        title: \"\",\r\n        author: \"\",\r\n        pubDate: \"\",\r\n        content: \"\",\r\n        link:\"\",\r\n        thumbnail:\"\",\r\n      },\r\n      post3: {\r\n        title: \"\",\r\n        author: \"\",\r\n        pubDate: \"\",\r\n        content: \"\",\r\n        link:\"\",\r\n        thumbnail:\"\",\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    axios.get('https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fmedium.com%2Ffeed%2Fthe-internship-experience-iit-guwahati')\r\n      .then(response => {\r\n        this.setState({ post1: response.data.items[0], post2:response.data.items[1], post3: response.data.items[2] });\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (<div className=\"container\">\r\n\r\n      <div className=\"upperfeed-box unselectable\">\r\n        <div className=\"up-1\">    \r\n          <div onClick={e=>(window.location=this.state.post1.link)} className=\"up1-image\" style={{ backgroundImage: 'url(' + this.state.post1.thumbnail + ')' }}></div>\r\n          <a class='feedbox-links' href={this.state.post1.link}>\r\n          <div className=\"up1-content\">\r\n          <div className=\"up1-title\">{this.state.post1.title}</div>\r\n            <div className=\"up1-author\">{this.state.post1.author}</div>\r\n            <div className=\"up1-desc\">{removeTags(this.state.post1.content).substring(0, 400) + \"....\"}</div>\r\n            <div className=\"up1-author-date\">\r\n              <div className=\"up1-author2\">{this.state.post1.author}</div>\r\n              <div className=\"up1-date\">31 March 2020</div>\r\n            </div>\r\n          </div>\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"up-2\">\r\n          <div onClick={e=>(window.location=this.state.post2.link)} className=\"up2-image\" style={{ backgroundImage: 'url(' + this.state.post2.thumbnail + ')' }}></div>\r\n          <a class='feedbox-links' href={this.state.post2.link}>\r\n          <div className=\"up2-content\"><div className=\"up2-title\">{this.state.post2.title}</div>\r\n            <div className=\"up2-desc\">{removeTags(this.state.post2.content).substring(0, 300) + \"....\"}</div>\r\n          </div>\r\n          <div className=\"up2-author-date\">\r\n            <div className=\"up2-author\" >\r\n            {this.state.post2.author}\r\n              </div>\r\n            <div className=\"up2-date\">\r\n              22 March 2020\r\n              </div>\r\n          </div>\r\n          </a>\r\n        </div>\r\n        \r\n        <div className=\"up-2\">\r\n          <div onClick={e=>(window.location=this.state.post3.link)} className=\"up2-image\" style={{ backgroundImage: 'url(' + this.state.post3.thumbnail + ')' }}></div>\r\n          <a class='feedbox-links' href={this.state.post3.link}>\r\n          <div className=\"up2-content\"><div className=\"up2-title\">{this.state.post3.title}</div>\r\n            <div className=\"up2-desc\">{removeTags(this.state.post3.content).substring(0, 300) + \"....\"}</div>\r\n          </div>\r\n          <div className=\"up2-author-date\">\r\n            <div className=\"up2-author\" >\r\n            {this.state.post3.author}\r\n              </div>\r\n            <div className=\"up2-date\">\r\n              22 March 2020\r\n              </div>\r\n          </div>\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default UpperFeed;","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\n\r\nfunction removeTags(str) {\r\n    if ((str === null) || (str === ''))\r\n        return 'empty';\r\n    else\r\n        str = str.toString();\r\n    return str.replace(/(<([^>]+)>)/ig, '');\r\n}\r\n\r\nconst FeedCard = props => (\r\n    <a class='feedbox-links' href={props.post.link}><div className=\"feed-box\">\r\n        <div className=\"feedbox-content\">\r\n            <div className=\"feedbox-title\">{props.post.title}</div>\r\n            <div className=\"feedbox-desc\">{removeTags(props.post.content).substring(0, 400) + \"....\"}</div>\r\n            <div className=\"feedbox-author-date\">\r\n                <div className=\"feedbox-author\">{props.post.author}</div>\r\n                <div className=\"feedbox-date\">15 March 2020</div>\r\n            </div>\r\n        </div>\r\n        <div className=\"feedbox-image\" style={{ backgroundImage: 'url(' + props.post.thumbnail + ')' }}></div>\r\n    </div>\r\n    </a>\r\n)\r\n\r\nclass Feed extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fmedium.com%2Ffeed%2Fthe-internship-experience-iit-guwahati')\r\n            .then(response => {\r\n                this.setState({ posts: response.data.items });\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    postCards() {\r\n        return this.state.posts.slice(3).map(function (currentPost, i) {\r\n            return <FeedCard post={currentPost} />;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"container\">\r\n            <div className=\"feed-heading\">LATEST</div>\r\n            <div className=\"feed-container\">\r\n                {this.postCards()}\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Feed;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UpperFeed from './components/upperfeed.component';\nimport Feed from './components/feed.component';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className='navclass container-fluid'>   \n            <div className='navlink-container'>\n              <Link to='/' className='navlinks unselectable mr-4'>Home</Link>\n              <Link to='/' className='navlinks unselectable'>About</Link>\n            </div>\n          </div>\n        <div className=\"header-box container-fluid unselectable\">\n          <div className=\"header-container\">\n            <div className=\"header-title-intro\">\n              <div className=\"title-header\">The Internship Experience</div>\n              <div className=\"intro-header\">The Internship Experience brings the truest stories from students interning in diverse streams, from Billion dollar MNCs to hottest startups, Foreign universities to Indian research.</div>\n            </div>\n            <div className=\"empty-container\"></div>\n          </div>\n          <div className='header-buttons container'>\n            <button className='button1 button2019'>\n              2019\n          </button>\n            <button className='button1 button2020'>\n              2020\n          </button>\n          </div>\n        </div>\n\n        <UpperFeed />\n        <Feed />\n\n        <div className='footer-box unselectable'>\n          The Internship Experience ©\n      </div>\n      \n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}